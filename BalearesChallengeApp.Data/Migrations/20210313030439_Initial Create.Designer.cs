// <auto-generated />
using System;
using BalearesChallengeApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BalearesChallengeApp.Data.Migrations
{
    [DbContext(typeof(BalearesDbContext))]
    [Migration("20210313030439_Initial Create")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BalearesChallengeApp.Models.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Villa Luzuriaga",
                            ProvinceId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "La Plata",
                            ProvinceId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Tigre",
                            ProvinceId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Merlo",
                            ProvinceId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Cosquin",
                            ProvinceId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Villa General Belgrano",
                            ProvinceId = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Mina Clavero",
                            ProvinceId = 2
                        },
                        new
                        {
                            Id = 8,
                            Name = "San Martin De Los Andes",
                            ProvinceId = 3
                        },
                        new
                        {
                            Id = 9,
                            Name = "Villa La Angostura",
                            ProvinceId = 3
                        },
                        new
                        {
                            Id = 10,
                            Name = "Centenario",
                            ProvinceId = 3
                        });
                });

            modelBuilder.Entity("BalearesChallengeApp.Models.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdatedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("BalearesChallengeApp.Models.Entities.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Province");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Buenos Aires"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cordoba"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Neuquen"
                        });
                });

            modelBuilder.Entity("BalearesChallengeApp.Models.Entities.City", b =>
                {
                    b.HasOne("BalearesChallengeApp.Models.Entities.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("BalearesChallengeApp.Models.Entities.Contact", b =>
                {
                    b.HasOne("BalearesChallengeApp.Models.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });
#pragma warning restore 612, 618
        }
    }
}
